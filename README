                        ESIO Build Procedure
                    =============================

0. Introduction
---------------

This document describes how to build ESIO from source code on
Unix-like systems.


1. Dependencies
---------------

The code depends upon the following libraries:

    1) A working MPI stack present in your path
    2) HDF5 built with MPI parallel capabilities
    3) (OPTIONAL) GRVY, The Groovy Toolkit


2. Configuration
----------------

If you have no `configure' script in the top level directory, run
`bootstrap' to create one using GNU autoconf and automake.

Before compiling ESIO, you need to run the provided `configure'
script.  Generally, just `./configure' will work, but you may wish to
provide more parameters.  Run `./configure --help' for details.

ESIO uses GNU Libtool in order to build shared libraries on a variety
of systems.  While this is very nice for making usable binaries, it can
be a pain when trying to debug a program.  For that reason, compilation
of shared libraries can be turned off by specifying the --disable-shared
option to configure.

3. Compilation
--------------

To compile ESIO after it has been configured, simply type 'make'.

After the compilation one or more ready-to-use executables should reside
in the apps directory.  The library is built within the ESIO directory.
Related documentation will be built in the doc
subdirectory.


4. Testing
--------------

Unit tests can be compiled and run using 'make check'.  Note that many
unit test are parallel in nature and depend on the availability of
'mpiexec'.


5. API documentation
--------------

API documentation can be produced in docs by running 'make docs'.
