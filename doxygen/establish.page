/*! \page establish Reusing parallel decompositions

ESIO provides methods to ease using the same parallel decomposition
over and over.

For example, a parallel post-processing code might read in simulation state
fields using esio_field_read_double() and write derived fields using
esio_field_write_double() where both calls share the same \c cglobal, \c
clocal, \c cstart, \c bglobal, \c blocal, \c bstart, \c aglobal, \c alocal, and
\c astart arguments.  Specifying these nine parameters multiple places is
tedious, lengthy, and error prone.

ESIO provides a way to establish such a decomposition once for \ref
conceptslines, \ref conceptsplanes, or \ref conceptsfields and then allows
reusing the decomposition.  Further, ESIO may be able to precompute storage
details in a way that will speed write operations across many restart files.

To establish the parallel decomposition of a line use the esio_line_establish()
routine.  Afterwards, you may call any of the ESIO routines that prefix their
operation name with 'e' (which stands for "established").  For example, you
might call esio_line_ewrite_double(), esio_line_ewritev_float(), or
esio_line_ereadv_int.  Finally, to retrieve the previously established details
use esio_line_established().  Using established plane and field decompositions
is completely analogous.

Note that neither stride- nor ncomponents-related parameters are considered
part of a parallel decomposition as they can change line-to-line,
plane-to-plane, or field-to-field.  Also note that decompositions established
for lines, planes, and fields are wholly distinct.

*/
